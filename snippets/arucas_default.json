{
  "True": {
    "prefix": "true",
    "body": [
      "true"
    ],
    "description": "The true literal"
  },
  "False": {
    "prefix": "false",
    "body": [
      "false"
    ],
    "description": "The false literal"
  },
  "Null": {
    "prefix": "null",
    "body": [
      "null"
    ],
    "description": "The null literal"
  },
  "If": {
    "prefix": "if",
    "body": [
      "if (${1:false}) {",
      "\t$0",
      "}"
    ],
    "description": "Template for a singluar if statement"
  },
  "If Else": {
    "prefix": "ifelse",
    "body": [
      "if (${1:false}) {",
      "\t$0",
      "} else {",
      "\t",
      "}"
    ],
    "description": "Template for an if and else statement"
  },
  "Switch": {
    "prefix": "switch",
    "body": [
      "switch ($1) {",
      "\tcase $2 -> {",
      "\t$3",
      "\t}",
      "}"
    ],
    "description": "Template for a switch statement"
  },
  "Class": {
    "prefix": "class",
    "body": [
      "class ${1:Name} {",
      "\t${1:Name}($2) {",
      "\t$0",
      "\t}",
      "}"
    ],
    "description": "Template for a class declaration"
  },
  "ChildClass": {
    "prefix": ["cclass", "child"],
    "body": [
      "class ${1:Name}: ${2:Object} {",
      "\t${1:Name}($3): super($4) {",
      "\t$0",
      "\t}",
      "}"
    ],
    "description": "Template for a child class"
  },
  "Enum": {
    "prefix": "enum",
    "body": [
      "enum ${1:Name} {",
      "\t${1:Name}($2) {",
      "\t$0",
      "\t}",
      "}"
    ],
    "description": "Template for an enum declaration"
  },
  "Interface": {
    "prefix": "interface",
    "body": [
      "interface ${1:Name} {",
      "\t$0",
      "}"
    ],
    "description": "Template for an interface"
  },
  "For I": {
    "prefix": "fori",
    "body": [
      "for (local i = $1; $2; $3) {",
      "\t$0",
      "}"
    ],
    "description": "Template for a for i loop"
  },
  "Foreach": {
    "prefix": "foreach",
    "body": [
      "foreach (item : $1) {",
      "\t$0",
      "}"
    ],
    "description": "Template for a foreach loop"
  },
  "While": {
    "prefix": "while",
    "body": [
      "while (${1:false}) {",
      "\t$0",
      "}"
    ],
    "description": "Template for a while loop"
  },
  "Continue": {
    "prefix": "continue",
    "body": [
      "continue;"
    ],
    "description": "The continue keyword"
  },
  "Break": {
    "prefix": "break",
    "body": [
      "break;"
    ],
    "description": "The break keyword"
  },
  "Return": {
    "prefix": "return",
    "body": [
      "return$1;"
    ],
    "description": "The return keyword"
  },
  "Import From": {
    "prefix": "import",
    "body": [
      "import ${1:*} from $2;"
    ],
    "description": "Template for import "
  },
  "Lambda": {
    "prefix": ["lambda"],
    "body": [
      "fun($1) $2"
    ],
    "description": "Template for a lambda"
  },
  "Function": {
    "prefix": ["fun", "function"],
    "body": [
      "fun ${1:name}($2) {",
      "\t$0",
      "}"
    ],
    "description": "Template for a basic function"
  },
  "Try Catch": {
    "prefix": "tryc",
    "body": [
      "try {",
      "\t$0",
      "} catch ($1) {",
      "\t",
      "}"
    ],
    "description": "Template for try-catch"
  },
  "Try Finally": {
    "prefix": "tryf",
    "body": [
      "try {",
      "\t$0",
      "} finally {",
      "\t",
      "}"
    ],
    "description": "Template for try-finally"
  },
  "Print": {
    "prefix": "sout",
    "body": [
      "print(\"$1\");"
    ],
    "description": "Template for printing"
  }
}